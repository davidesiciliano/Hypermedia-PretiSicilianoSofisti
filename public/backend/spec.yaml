---
swagger: "2.0"
info:
  description: "Volontariato di Montagna Association's website"
  version: "1.0.0"
  title: "Volontariato di Montagna"
  contact:
    email: "davidegiuseppe.siciliano@mail.polimi.it"
  license:
    name: "Apache-2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
basePath: "/v2"
tags:
- name: "activity"
  description: "Activity offered by the association"
- name: "contact"
  description: "Contact of Person or Farm"
- name: "event"
  description: "Event organized by the association"
- name: "FAQ"
  description: "FAQ asked by users"
- name: "farm"
  description: "Farm involved in the association"
- name: "helpUsForm"
  description: "From sent to contact the association"
- name: "isInvolvedIn"
  description: "Relationship between person and activity"
- name: "offers"
  description: "Realtionship between farm and activity"
- name: "person"
  description: "Person of the volontariato"
- name: "relatedTo"
  description: "Realationship between event and activity"
schemes:
- "http"
paths:
  /activities:
    get:
      tags:
      - "activity"
      summary: "Activities of the association"
      description: "List of activities offered by association"
      operationId: "activityGET"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: "Pagination offset. Default is 0."
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Maximum number of items per page. Default is 20 and cannot exceed\
          \ 500."
        required: false
        type: "integer"
      responses:
        "200":
          description: "A collection of Activities"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Activity"
        "404":
          description: "Unexpected error"
      x-swagger-router-controller: "Activity"
  /activities/findById/{activityId}:
    get:
      tags:
      - "activity"
      summary: "Find activity by ID"
      description: "Returns an activity"
      operationId: "getActivityById"
      produces:
      - "application/json"
      parameters:
      - name: "activityId"
        in: "path"
        description: "ID of activity to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Activity"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Activity not found"
      x-swagger-router-controller: "Activity"
  /activities/findByName/{activityName}:
    get:
      tags:
      - "activity"
      summary: "Find activity by Name"
      description: "Returns the activities with a specific name"
      operationId: "getActivityByName"
      produces:
      - "application/json"
      parameters:
      - name: "activityName"
        in: "path"
        description: "Name of the activities to return"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Activity"
        "400":
          description: "Invalid name supplied"
        "404":
          description: "Activity not found"
      x-swagger-router-controller: "Activity"
  /contacts/findById/{contactId}:
    get:
      tags:
      - "contact"
      summary: "Find contact by ID"
      description: "Returns a contact"
      operationId: "getContactById"
      produces:
      - "application/json"
      parameters:
      - name: "contactId"
        in: "path"
        description: "ID of contact to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Contact"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Contact not found"
      x-swagger-router-controller: "Contact"
  /events:
    get:
      tags:
      - "event"
      summary: "Events organized by the association"
      description: "List of events of the association"
      operationId: "eventsGET"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: "Pagination offset. Default is 0."
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Maximum number of items per page. Default is 20 and cannot exceed\
          \ 500."
        required: false
        type: "integer"
      responses:
        "200":
          description: "A collection of Events"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Event"
        "404":
          description: "Unexpected error"
      x-swagger-router-controller: "Event"
  /events/findById/{eventId}:
    get:
      tags:
      - "event"
      summary: "Find event by ID"
      description: "Returns an event"
      operationId: "getEventById"
      produces:
      - "application/json"
      parameters:
      - name: "eventId"
        in: "path"
        description: "ID of event to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Event"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Event not found"
      x-swagger-router-controller: "Event"
  /events/findByName/{eventName}:
    get:
      tags:
      - "event"
      summary: "Find events by name"
      description: "Returns events with a specific name"
      operationId: "getEventByName"
      produces:
      - "application/json"
      parameters:
      - name: "eventName"
        in: "path"
        description: "Name of events to return"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Event"
        "400":
          description: "Invalid Name supplied"
        "404":
          description: "Event not found"
      x-swagger-router-controller: "Event"
  /events/findByPersonId/{personId}:
    get:
      tags:
      - "event"
      summary: "Find events related to a personId"
      description: "Returns events related to a person"
      operationId: "getEventsByPersonId"
      produces:
      - "application/json"
      parameters:
      - name: "personId"
        in: "path"
        description: "PersonId of considered person"
        required: true
        type: "integer"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Event"
        "400":
          description: "Invalid PersonId supplied"
        "404":
          description: "Event not found"
      x-swagger-router-controller: "Event"
  /faq:
    get:
      tags:
      - "FAQ"
      summary: "FAQs of the Association"
      description: "List of Frequent Asked Questions"
      operationId: "faqGET"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: "Pagination offset. Default is 0."
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Maximum number of items per page. Default is 20 and cannot exceed\
          \ 500."
        required: false
        type: "integer"
      responses:
        "200":
          description: "A collection of FAQ"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/FAQ"
        "404":
          description: "Unexpected error"
      x-swagger-router-controller: "FAQ"
  /farms:
    get:
      tags:
      - "farm"
      summary: "Farm enrolled in the association"
      description: "List of farms in the association"
      operationId: "farmsGET"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: "Pagination offset. Default is 0."
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Maximum number of items per page. Default is 20 and cannot exceed\
          \ 500."
        required: false
        type: "integer"
      responses:
        "200":
          description: "A collection of Farms"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Farm"
        "404":
          description: "Unexpected error"
      x-swagger-router-controller: "Farm"
  /farms/findById/{farmId}:
    get:
      tags:
      - "farm"
      summary: "Find farm by ID"
      description: "Returns a farm"
      operationId: "getFarmById"
      produces:
      - "application/json"
      parameters:
      - name: "farmId"
        in: "path"
        description: "ID of farm to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Farm"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Farm not found"
      x-swagger-router-controller: "Farm"
  /farms/findByName/{farmName}:
    get:
      tags:
      - "farm"
      summary: "Find farms by name"
      description: "Return farms with the specified name"
      operationId: "getFarmByName"
      produces:
      - "application/json"
      parameters:
      - name: "farmName"
        in: "path"
        description: "Name of farms to return"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Farm"
        "400":
          description: "Invalid name supplied"
        "404":
          description: "Farm not found"
      x-swagger-router-controller: "Farm"
  /helpUsForm/sendForm:
    post:
      tags:
      - "helpUsForm"
      summary: "HelpUs form"
      description: "Send a form to be recontacted"
      operationId: "helpUsFormPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "helpUsform"
        description: "the form to insert"
        required: false
        schema:
          $ref: "#/definitions/HelpUsForm"
      responses:
        "201":
          description: "OK"
        "400":
          description: "invalid input"
        "404":
          description: "unauthorized"
      x-swagger-router-controller: "HelpUsForm"
  /isInvolvedIn/findInvolvedPeople/{activityId}:
    get:
      tags:
      - "isInvolvedIn"
      summary: "Find all people involved in a specific activity"
      description: "Returns a list of couples person-activity"
      operationId: "getPeopleByActivityId"
      produces:
      - "application/json"
      parameters:
      - name: "activityId"
        in: "path"
        description: "ID of the considered activity"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/IsInvolvedIn"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Activity not found"
      x-swagger-router-controller: "IsInvolvedIn"
  /isInvolvedIn/findAssignedActivities/{personId}:
    get:
      tags:
      - "isInvolvedIn"
      summary: "Find all activities assigned to a specific person"
      description: "Returns a list of couples person-activity"
      operationId: "getActivitiesByPersonId"
      produces:
      - "application/json"
      parameters:
      - name: "personId"
        in: "path"
        description: "ID of the considered person"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/IsInvolvedIn"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Activity not found"
      x-swagger-router-controller: "IsInvolvedIn"
  /offers/findInterestedFarms/{activityId}:
    get:
      tags:
      - "offers"
      summary: "Find all farms interested by a specific activity"
      description: "Returns a list of farms"
      operationId: "getFarmsByActivityId"
      produces:
      - "application/json"
      parameters:
      - name: "activityId"
        in: "path"
        description: "ID of the considered activity"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Offers"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Activity not found"
      x-swagger-router-controller: "Offers"
  /offers/findRelatedActivities/{farmId}:
    get:
      tags:
      - "offers"
      summary: "Find all activities offered by a farm"
      description: "Returns a list of activities"
      operationId: "getActivitiesByFarmId"
      produces:
      - "application/json"
      parameters:
      - name: "farmId"
        in: "path"
        description: "ID of the considered farm"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Offers"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Farm not found"
      x-swagger-router-controller: "Offers"
  /people/findById/{personId}:
    get:
      tags:
      - "person"
      summary: "Find person by ID"
      description: "Returns a person"
      operationId: "getPersonById"
      produces:
      - "application/json"
      parameters:
      - name: "personId"
        in: "path"
        description: "ID of person to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Person"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Person not found"
      x-swagger-router-controller: "Person"
  /people/findByRole/{personRole}:
    get:
      tags:
      - "person"
      summary: "Find people by role"
      description: "Returns all people with a specific role"
      operationId: "getPersonByRole"
      produces:
      - "application/json"
      parameters:
      - name: "personRole"
        in: "path"
        description: "Role of people to return"
        required: true
        type: "string"
        enum:
        - "Founder"
        - "Expert"
        - "Volunteer"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Person"
        "400":
          description: "Invalid role supplied"
        "404":
          description: "Person not found"
      x-swagger-router-controller: "Person"
  /relatedTo/findRelatedEvents/{activityId}:
    get:
      tags:
      - "relatedTo"
      summary: "Find all events related to a specific activity"
      description: "Returns a list of events"
      operationId: "getEventsByActivityId"
      produces:
      - "application/json"
      parameters:
      - name: "activityId"
        in: "path"
        description: "ID of the considered activity"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/RelatedTo"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Activity not found"
      x-swagger-router-controller: "RelatedTo"
definitions:
  Activity:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      description:
        type: "string"
      startDate:
        type: "string"
        format: "date"
      endDate:
        type: "string"
        format: "date"
      activityImg:
        type: "string"
    title: "Activity"
    description: "Contact associated to Person and Farm"
    example:
      id: 0
      name: "Harvest"
      description: "Harvest description"
      startDate: "2020-07-01"
      endDate: "2020-09-30"
      activityImg: "img1"
  Contact:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      email:
        type: "string"
        format: "email"
      phoneNumber:
        type: "string"
    title: "Contact"
    description: "Contact associated to Person and Farm"
    example:
      id: 0
      email: "davide@siciliano.it"
      phoneNumber: "12345"
  Event:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      date:
        type: "string"
        format: "date"
      hours:
        type: "string"
        format: "time"
      location:
        type: "string"
      smallDescription:
        type: "string"
      completeDescription:
        type: "string"
      eventImg:
        type: "string"
      personId:
        type: "integer"
        format: "int64"
      farmId:
        type: "integer"
    title: "Event"
    description: "An event of the association"
    example:
      id: 0
      name: "ViggionFestival"
      date: "2020-07-25"
      hours: "21:00"
      location: "Viggiona"
      smallDescription: "small description"
      completeDescription: "complete description"
      eventImg: "Img0"
      personId: 1
  FAQ:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      question:
        type: "string"
      answer:
        type: "string"
    example:
      id: 0
      question: "How to contact us"
      answer: "Use the contact form"
  Farm:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      farmName:
        type: "string"
      ownerName:
        type: "string"
      shortDescription:
        type: "string"
      completeDescription:
        type: "string"
      address:
        type: "string"
      coordinates:
        type: "array"
        items:
          type: "integer"
      openingTimes:
        type: "string"
      gallery:
        type: "array"
        items:
          type: "string"
      farmImg:
        type: "string"
      contactId:
        type: "integer"
        format: "int64"
    title: "Farm"
    description: "A farm involved in the association"
    example:
      id: 0
      farmName: "Rossi's Farm"
      ownerName: "Mario Rossi"
      shortDescription: "Farm managed by Rossi's Family"
      completeDescription: "A long description"
      address: "via fattoria, 10"
      coordinates:
      - 1
      - 3
      openingTimes: "7.00 - 14.00, 17.00 - 19.30"
      gallery:
      - "img1"
      - "img2"
      farmImg: "Img0"
      contactId: 0
  HelpUsForm:
    type: "object"
    properties:
      name:
        type: "string"
      surname:
        type: "string"
      birthDate:
        type: "string"
      address:
        type: "string"
      city:
        type: "string"
      province:
        type: "string"
      phoneNumber:
        type: "string"
      email:
        type: "string"
      skills:
        type: "string"
      description:
        type: "string"
    title: "HelpUsForm"
    description: "A form sent to the organizers"
    example:
      id: "0"
      name: "Davide"
      surname: "Siciliano"
      birthDate: "28-7-96"
      address: "address"
      city: "city"
      province: "province"
      phoneNumber: "1234567"
      email: "davide.siciliano"
      skills: "some skills"
      description: "a description"
  IsInvolvedIn:
    type: "object"
    properties:
      personId:
        type: "integer"
        format: "int64"
      activityId:
        type: "integer"
        format: "int64"
    example:
      personId: 6
      activityId: 3
  Offers:
    type: "object"
    properties:
      farmId:
        type: "integer"
        format: "int64"
      activityId:
        type: "integer"
        format: "int64"
    example:
      farmId: 2
      activityId: 3
  Person:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      surname:
        type: "string"
      role:
        type: "string"
        description: "role of the person in the association"
        enum:
        - "Founder"
        - "Expert"
        - "Volunteer"
      description:
        type: "string"
      personImg:
        type: "string"
      contactId:
        type: "integer"
        format: "int64"
    title: "Person"
    description: "A person involved in the association"
    example:
      id: 0
      name: "Davide"
      surname: "Siciliano"
      role: "Founder"
      personImg: "Img0"
      contactId: 0
  RelatedTo:
    type: "object"
    properties:
      eventId:
        type: "integer"
        format: "int64"
      activityId:
        type: "integer"
        format: "int64"
    example:
      eventId: 6
      activityId: 3
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
